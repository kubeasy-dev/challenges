on:
  push:
    branches:
      - main
    paths:
      - '**/challenge.yaml'
  workflow_dispatch:
  
name: Sync Challenge to Database

jobs:
  challenges:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      added_files: ${{ steps.changed-files.outputs.added_files }}
      deleted_files: ${{ steps.changed-files.outputs.deleted_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          since_last_remote_commit: true 
          dir_names: true
          dir_names_max_depth: 1
          matrix: true
          files: '**/challenge.yaml'

      - name: Debug
        run: |
          echo "Changed challenges: ${{ steps.changed-files.outputs.all_changed_files }}"
  sync:
    runs-on: ubuntu-latest
    needs: challenges
    if: ${{ needs.challenges.outputs.changed_files != '[]' }}
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: '.github/scripts/package.json'
      - name: Install dependencies
        run: npm ci
        working-directory: .github/scripts
      - name: Sync challenges to database
        run: |
          echo "Syncing challenges: ${{ needs.challenges.outputs.changed_files }}"
          node .github/scripts/sync.js '${{ needs.challenges.outputs.changed_files }}'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

  delete:
    runs-on: ubuntu-latest
    needs: challenges
    if: ${{ needs.challenges.outputs.deleted_files != '[]' }}
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: '.github/scripts/package.json'
      - name: Install dependencies
        run: npm ci
        working-directory: .github/scripts
      - name: Delete challenges from database
        run: |
          echo "Deleting challenges: ${{ needs.challenges.outputs.deleted_files }}"
          node .github/scripts/sync.js '${{ needs.challenges.outputs.deleted_files }}' delete
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
  
  github_resources:
    runs-on: ubuntu-latest
    needs: challenges
    if: ${{ needs.challenges.outputs.added_files != '[]' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: '.github/scripts/package.json'
      - name: Install dependencies
        run: npm ci
        working-directory: .github/scripts
      - name: Create GitHub resources for new challenges
        run: |
          echo "Creating GitHub resources for added challenges"
          echo "Added challenges: ${{ needs.challenges.outputs.added_files }}"
          node .github/scripts/create-github-resources.js '${{ needs.challenges.outputs.added_files }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
